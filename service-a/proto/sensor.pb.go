// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/sensor.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorValue   float64                `protobuf:"fixed64,1,opt,name=sensor_value,json=sensorValue,proto3" json:"sensor_value,omitempty"`
	SensorType    string                 `protobuf:"bytes,2,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"`
	Id1           string                 `protobuf:"bytes,3,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2           int32                  `protobuf:"varint,4,opt,name=id2,proto3" json:"id2,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	mi := &file_proto_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorData) GetSensorValue() float64 {
	if x != nil {
		return x.SensorValue
	}
	return 0
}

func (x *SensorData) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *SensorData) GetId1() string {
	if x != nil {
		return x.Id1
	}
	return ""
}

func (x *SensorData) GetId2() int32 {
	if x != nil {
		return x.Id2
	}
	return 0
}

func (x *SensorData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{1}
}

var File_proto_sensor_proto protoreflect.FileDescriptor

const file_proto_sensor_proto_rawDesc = "" +
	"\n" +
	"\x12proto/sensor.proto\x12\x06sensor\"\x92\x01\n" +
	"\n" +
	"SensorData\x12!\n" +
	"\fsensor_value\x18\x01 \x01(\x01R\vsensorValue\x12\x1f\n" +
	"\vsensor_type\x18\x02 \x01(\tR\n" +
	"sensorType\x12\x10\n" +
	"\x03id1\x18\x03 \x01(\tR\x03id1\x12\x10\n" +
	"\x03id2\x18\x04 \x01(\x05R\x03id2\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"\a\n" +
	"\x05Empty2>\n" +
	"\rSensorService\x12-\n" +
	"\bSendData\x12\x12.sensor.SensorData\x1a\r.sensor.EmptyB\x1cZ\x1aservice-a/internal/grpc/pbb\x06proto3"

var (
	file_proto_sensor_proto_rawDescOnce sync.Once
	file_proto_sensor_proto_rawDescData []byte
)

func file_proto_sensor_proto_rawDescGZIP() []byte {
	file_proto_sensor_proto_rawDescOnce.Do(func() {
		file_proto_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)))
	})
	return file_proto_sensor_proto_rawDescData
}

var file_proto_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_sensor_proto_goTypes = []any{
	(*SensorData)(nil), // 0: sensor.SensorData
	(*Empty)(nil),      // 1: sensor.Empty
}
var file_proto_sensor_proto_depIdxs = []int32{
	0, // 0: sensor.SensorService.SendData:input_type -> sensor.SensorData
	1, // 1: sensor.SensorService.SendData:output_type -> sensor.Empty
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_sensor_proto_init() }
func file_proto_sensor_proto_init() {
	if File_proto_sensor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sensor_proto_goTypes,
		DependencyIndexes: file_proto_sensor_proto_depIdxs,
		MessageInfos:      file_proto_sensor_proto_msgTypes,
	}.Build()
	File_proto_sensor_proto = out.File
	file_proto_sensor_proto_goTypes = nil
	file_proto_sensor_proto_depIdxs = nil
}
